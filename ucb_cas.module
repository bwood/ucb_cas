<?php
define('CHANGE_TEXT', '<font color = "red">consider changing your settings.</font>');
define('GOOD_TEXT', '<font color = "green">your settings are probably good.</font>');

/**
 * Implements hook_menu().
 *
 * Create a back door to prevent admin lockouts
 */

function ucb_cas_menu() {
  $items['user/admin_login'] = array (
    'title' => 'Admin Login',
    'page callback' => 'ucb_cas_admin_login_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['admin/user/ucbcas'] = array (
    'title' => 'UCB CAS',
    'description' => 'UCB CAS recommendations and review.',
    'page callback' => 'ucb_cas_admin',
    'access arguments' => array('administer cas'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function ucb_cas_admin_login_page() {
  global $user;
  if ($user->uid) {
    menu_set_active_item('user/'. $user->uid);
    return menu_execute_active_handler();
  }
  else {
    return drupal_get_form('ucb_cas_admin_login');
  }
}

function ucb_cas_admin_login($form) {
	include_once(drupal_get_path('module', 'user') . '/user.module');

	drupal_set_message('Admins should login via Calnet whenever possible.  Unless this site is running https, this form is not secure. See the ucb_cas <a href="/sites/all/modules/ucb_cas/README.txt">README.txt</a>', 'warning', false);

	//see user.module user_login_block() 
  $form = array(
    '#action' => url($_GET['q'], array('query' => drupal_get_destination())),
    '#id' => 'user-login-form',
    '#validate' => user_login_default_validators(),
    '#submit' => array('user_login_submit'),
  );
  $form['name'] = array('#type' => 'textfield',
    '#title' => t('Username'),
    '#maxlength' => USERNAME_MAX_LENGTH,
    '#size' => 15,
    '#required' => TRUE,
  );
  $form['pass'] = array('#type' => 'password',
    '#title' => t('Password'),
    '#maxlength' => 60,
    '#size' => 15,
    '#required' => TRUE,
  );
  $form['submit'] = array('#type' => 'submit',
    '#value' => t('Log in'),
  );
  return $form;
}

/**
 * 
 * Admin page.  Checks and recommendations
 */
function ucb_cas_admin() {

	$out = '<p><h2>' . t('UCB CAS Configuration Review') . '</h2><p>';
  $use_case_text = <<<EOT
These are the most common ways Drupal is being used at UC Berkeley.  
Think about which case applies to your site, and then consider the configuration
recommentations below.
EOT;
	$out .= '<h3>' . t('Common Drupal Site Use Cases') . '</h3>';
	$out .= t($use_case_text);	
	$out .= '<ol>';
	$out .= '<li>' . t("Visitors to the site do not need to login. Site content is maintained by team of content editors.") . '</li>' ;
	$out .= '<li>'. t("Visitors to the site need to login to post comments, write reviews, submit webforms, etc.") . '</li>';
	$out .= '</ol>';
	 
	 /* Login blocks */
	//TODO make collapsible
	$out .= ucb_cas_fieldset("Login Blocks", ucb_cas_login_blocks_recommendations());
	//$out .= ucb_cas_login_blocks_recommendations();
	return $out;
}

/**
 * login blocks recommendations
 */
function ucb_cas_login_blocks_recommendations() {
	global $base_url;
	$change_text = CHANGE_TEXT;
  $good_text = GOOD_TEXT;

  $login_blocks_no_link_why = "<p>This way there is no link encouraging people who shouldn't be logging in to your site to authenticate. This prevents unwanted accounts from being created on your site.</p>";

	$login_blocks = ucb_cas_login_blocks_check();
	//$out .= '<h3>' . t('Login Blocks') . '</h3>';
	//$out .= '<legend class="collapse-processed">' . t('Login Blocks') . '</legend>';
	$login_blocks_text = <<<EOT
<p>Depending on your use case, you may or may not want to display a login block on your site.</p>
EOT;
	$out = t($login_blocks_text);
	$login_blocks_on_advice_on_1 = <<<EOT
<b>If this site follows use case #1</b>,&nbsp;$change_text<br/>
<ul>
<li><a href="/admin/build/block" target = "_new">Disable these login blocks</a> by setting Region to 'None' and saving the form. (Then reload this page).</li>
<li>If you are using a custom theme, don't add a login link there.</li>
<li>Inform your team of content editors that they can login at <b>$base_url/cas</b></li>
</ul>
$login_blocks_no_link_why
EOT;

	$login_blocks_on_advice_on_2 = <<<EOT
<b>If this site follows use case #2</b>,&nbsp;$good_text<br/>
<ul>
<li>Displaying these login blocks is probably appropriate.</li>
<li>Additonally requiring a CAS login for certain nodes may be a good idea:</li>
  <ul>
  <li>For example if you have a webform at <b>node/1234</b> that requires the user to be logged in, you can add <b>node/1234</b>
  to Redirection > Specific Pages, and select "Require CAS loogin for specific pages" on the <a href="/admin/user/cas" 
  target = "_new">CAS settings page</a>.
  </li> 
  </ul>
</ul>
EOT;

	$login_blocks_on_advice_off_1 = <<<EOT
<b>If this site follows use case #1</b>,&nbsp;$good_text<br/>
<ul>
<li>(If you are using a custom theme, don't add a login link there.)</li>
<li>Inform your team of content editors that they can login at <b>$base_url/cas</b></li>
</ul>
$login_blocks_no_link_why
EOT;

	$login_blocks_on_advice_off_2 = <<<EOT
<b>If this site follows use case #2</b>,&nbsp;$change_text<br/>
<ul>
<li>Since users need to authenticate to your site, you should consider <a href="/admin/build/block" target = "_new">enabling a login block</a>. 
Find the User Login block and set a region for it. (Then reload this page.)</li>
EOT;

	
	if (count($login_blocks) > 0) {
    $out .= '<h4>' . t('Currently you have login blocks enabled') . '</h4>';
		$out .= '<table>';
		$out .= '<tr><th>Block Name</th><th>Region</th><th>Module Providing Block</th></tr>';
		while (list($k, $v) = each($login_blocks)) {
			$out .= '<tr>';
			$out .= "<td>". $v[0] ."</td>";
			$out .= "<td>". $v[1] ."</td>";
			$out .= "<td>". $k."</td>";						
			$out .= '</tr>';			
		}

    $out .= '</table>';		
    $out .= '<h4>Recommentations</h4><p>';		
    $out .= t($login_blocks_on_advice_on_1);
    $out .= t($login_blocks_on_advice_on_2);
	} 
	else {
		$out .= '<h4><i>' . t('No login blocks enabled') . '</i></h4><p>';
    $out .= '<h4>Recommentations</h4>';		
    $out .= t($login_blocks_on_advice_off_1);
    $out .= t($login_blocks_on_advice_off_2);

	}
	return $out;
}
/**
 * Check login blocks
 */
function ucb_cas_login_blocks_check() {
	
  $theme = variable_get('theme_default', '');
  $blocks = _block_rehash($theme);
  $login_blocks = array();
  foreach ($blocks as $b) {
  	if ((stripos($b['info'], 'login') !== FALSE) && ($b['region'] != -1)) {
  		$login_blocks[$b['module']] = array($b['info'], $b['region']);
  	}
  }
  return $login_blocks;
}

/**
 * Return a fieldset
 */
 function ucb_cas_fieldset($title, $content, $collapsible = TRUE) {
 	$fieldset = array(
   '#title' => $title,
   '#description' => $content,
 	 '#children' => NULL,
   '#collapsible' => $collapsible,
  );
  $html = theme_fieldset($fieldset);
  return $html;
 }
